{"ast":null,"code":"var _jsxFileName = \"/Users/Stephen/Documents/Code/APOD/apod_nasa_proj/src/App.js\";\nimport React, { Component } from 'react'; //import Objects from './components/objects.js';\n\nimport Pictures from './components/pictures.js';\nimport Videos from './components/videos.js';\nimport Navbar from './components/navBar.js';\nimport Infocard from './components/infoCard.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      media: []\n    };\n  }\n\n  componentDidMount() {\n    let today = 'https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ'; //let vidTst = 'https://api.nasa.gov/planetary/apod?date=2020-06-03&&api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ';\n    //vidTst is for testing to see if this works with a video.\n\n    fetch(today).then(res => res.json()).then(data => {\n      this.setState({\n        media: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    let conRend;\n\n    if (this.state.media.media_type == 'video') {\n      conRend = /*#__PURE__*/React.createElement(Videos, {\n        media: this.state.media,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      });\n    }\n\n    if (this.state.media.media_type == 'image') {\n      conRend = /*#__PURE__*/React.createElement(Pictures, {\n        media: this.state.media,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, conRend), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Infocard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Stephen/Documents/Code/APOD/apod_nasa_proj/src/App.js"],"names":["React","Component","Pictures","Videos","Navbar","Infocard","App","constructor","props","state","media","componentDidMount","today","fetch","then","res","json","data","setState","catch","console","log","render","conRend","media_type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAoB,0BAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACxBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AAEjB,QAAIC,KAAK,GAAG,sFAAZ,CAFiB,CAGjB;AACA;;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,KAJD,EAKCE,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;AAEDC,EAAAA,MAAM,GAAI;AACR,QAAIC,OAAJ;;AACA,QAAG,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,UAAjB,IAA+B,OAAlC,EACA;AACED,MAAAA,OAAO,gBAAG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AAED,QAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBc,UAAjB,IAA+B,OAAlC,EACA;AACED,MAAAA,OAAO,gBAAG,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAGA;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,OADH,CADF,eAIE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAJF,CAHA,CADF;AAcD;;AA/CyB;;AAkD5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\n//import Objects from './components/objects.js';\nimport Pictures from './components/pictures.js';\nimport Videos from './components/videos.js';\nimport Navbar from './components/navBar.js';\nimport Infocard from'./components/infoCard.js';\n\nclass App extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n        media: []\n    };\n  }\n\n  componentDidMount(){\n\n    let today = 'https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ';\n    //let vidTst = 'https://api.nasa.gov/planetary/apod?date=2020-06-03&&api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ';\n    //vidTst is for testing to see if this works with a video.\n    fetch(today)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ media: data })\n    })\n    .catch(console.log)\n  }\n\n  render () {\n    let conRend;\n    if(this.state.media.media_type == 'video')\n    {\n      conRend = <Videos media={this.state.media} />\n    }\n\n    if(this.state.media.media_type == 'image')\n    {\n      conRend = <Pictures media={this.state.media} />\n    }\n\n    return (\n      <div>\n      {<Navbar />}\n\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          {conRend}\n        </div>\n        <div class=\"col-sm\">\n          {<Infocard />}\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}