{"ast":null,"code":"var _jsxFileName = \"/Users/Stephen/Documents/Code/APOD/apod_nasa_proj/src/App.js\";\nimport React, { Component } from 'react';\nimport Pictures from './components/pictures.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pictures: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ').then(res => res.json()).then(data => {\n      this.setState({\n        pictures: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Pictures, {\n      pictures: this.state.pictures,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Stephen/Documents/Code/APOD/apod_nasa_proj/src/App.js"],"names":["React","Component","Pictures","App","state","pictures","componentDidMount","fetch","then","res","json","data","setState","catch","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAC;AADH,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,sFAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACD,KAJD,EAKCE,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;AACDC,EAAAA,MAAM,GAAI;AACR,wBACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAjByB;;AAoB5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Pictures from './components/pictures.js';\n\nclass App extends Component {\n  state = {\n    pictures:[]\n  }\n\n  componentDidMount(){\n    fetch('https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ pictures: data })\n    })\n    .catch(console.log)\n  }\n  render () {\n    return (\n      <Pictures pictures={this.state.pictures} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}