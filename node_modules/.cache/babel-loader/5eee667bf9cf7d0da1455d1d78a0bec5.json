{"ast":null,"code":"var _jsxFileName = \"/Users/Stephen/Documents/Code/APOD/apod_nasa_proj/src/App.js\";\nimport React, { Component } from 'react';\nimport Pictures from './components/pictures.js';\nimport Videos from './components/videos.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      media: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ').then(res => res.json()).then(data => {\n      this.setState({\n        media: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const medType = this.state.media.media_type;\n    let retRen;\n\n    if (medType == \"video\") {\n      retRen = /*#__PURE__*/React.createElement(Videos, {\n        media: this.state.media,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      });\n    } else if (this.state.media_type == \"video\") {\n      retRen = /*#__PURE__*/React.createElement(Videos, {\n        media: this.state.media,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      });\n      retRen = /*#__PURE__*/React.createElement(Pictures, {\n        media: this.state.media,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      });\n    }\n\n    return {\n      retRen\n    };\n  }\n\n}\n\nexport default App;\n/*\nimport React, { Component } from 'react';\nimport Pictures from './components/pictures.js';\nimport Videos from './components/videos.js';\n\n\nclass App extends Component {\n  state = {\n    media:[]\n  }\n\n  componentDidMount(){\n    fetch('https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ media: data })\n    })\n    .catch(console.log)\n  }\n  render () {\n    if (media.media_type == \"image\") {\n    return (\n        <Pictures pictures={this.state.media} />\n      )}\n\n      if (media.media_type == \"video\"){\n        return (\n      <Videos videos={this.state.media} />\n    )}\n\n  }\n}\n\nexport default App;\n\n*/","map":{"version":3,"sources":["/Users/Stephen/Documents/Code/APOD/apod_nasa_proj/src/App.js"],"names":["React","Component","Pictures","Videos","App","state","media","componentDidMount","fetch","then","res","json","data","setState","catch","console","log","render","medType","media_type","retRen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAC;AADA,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,sFAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM;AAAT,OAAd;AACD,KAJD,EAKCE,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;AAGDC,EAAAA,MAAM,GAAI;AACR,UAAMC,OAAO,GAAG,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,UAAjC;AACA,QAAIC,MAAJ;;AAEA,QAAIF,OAAO,IAAI,OAAf,EACA;AACEE,MAAAA,MAAM,gBAAI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD,KAHD,MAIO,IAAI,KAAKD,KAAL,CAAWc,UAAX,IAAyB,OAA7B,EACL;AACEC,MAAAA,MAAM,gBAAI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACAc,MAAAA,MAAM,gBAAI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AAED;;AACD,WAAQ;AAACc,MAAAA;AAAD,KAAR;AACD;;AA9BuB;;AAkC5B,eAAehB,GAAf;AACA","sourcesContent":["import React, { Component } from 'react';\nimport Pictures from './components/pictures.js';\nimport Videos from './components/videos.js';\n\n\nclass App extends Component {\n  state = {\n    media:[]\n  }\n\n  componentDidMount(){\n    fetch('https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ media: data })\n    })\n    .catch(console.log)\n  }\n\n\n  render () {\n    const medType = this.state.media.media_type;\n    let retRen;\n\n    if (medType == \"video\")\n    {\n      retRen =  <Videos media={this.state.media} />;\n    }\n      else if (this.state.media_type == \"video\")\n      {\n        retRen =  <Videos media={this.state.media} />;\n        retRen =  <Pictures media={this.state.media} />;\n\n      }\n      return ({retRen});\n    }\n  }\n\n\nexport default App;\n/*\nimport React, { Component } from 'react';\nimport Pictures from './components/pictures.js';\nimport Videos from './components/videos.js';\n\n\nclass App extends Component {\n  state = {\n    media:[]\n  }\n\n  componentDidMount(){\n    fetch('https://api.nasa.gov/planetary/apod?api_key=UrXJyJZWfOwzULw07rfPFuiur4cEsYCmC7WaSkTZ')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ media: data })\n    })\n    .catch(console.log)\n  }\n  render () {\n    if (media.media_type == \"image\") {\n    return (\n        <Pictures pictures={this.state.media} />\n      )}\n\n      if (media.media_type == \"video\"){\n        return (\n      <Videos videos={this.state.media} />\n    )}\n\n  }\n}\n\nexport default App;\n\n*/\n"]},"metadata":{},"sourceType":"module"}